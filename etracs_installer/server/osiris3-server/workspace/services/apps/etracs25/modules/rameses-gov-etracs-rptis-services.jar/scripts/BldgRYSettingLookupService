import com.rameses.annotations.*
import com.rameses.common.*
import com.rameses.util.*

public class BldgRYSettingLookupService
{
	@PersistenceContext('rpt')
	def em
     
    @Service('LookupUtilService')
	def lupSvc 

    @Service('RPTParameterService')
    def paramSvc
	

    @ProxyMethod
    public def lookupBldgRySettingById(objid){
        return em.sqlContext.createNamedQuery('bldgrysettinglookup:lookupBldgRySettingById')
                .setParameter('objid', objid).singleResult
    }


	@ProxyMethod
    public def lookupAssessLevels(params){
    	return lupSvc.lookup( 'bldgrysettinglookup:lookupAssessLevels', params, 'bal.objid' )
    }


    @ProxyMethod
    public def lookupAssessLevelByPrevId(previd){
        return em.sqlContext.createNamedQuery('bldgrysettinglookup:lookupAssessLevelByPrevId')
                .setParameter('previd', previd).singleResult
    }




	@ProxyMethod
    public def lookupBldgTypes(params){
    	return lupSvc.lookup( 'bldgrysettinglookup:lookupBldgTypes', params, 'bt.objid' )
    }




    @ProxyMethod
    public def lookupBldgTypeByPrevId(previd){
        return em.sqlContext.createNamedQuery('bldgrysettinglookup:lookupBldgTypeByPrevId')
                .setParameter('previd', previd).singleResult
    }


    @ProxyMethod
    public def lookupBldgTypeById(objid){
    	return em.sqlContext.createNamedQuery('bldgrysettinglookup:lookupBldgTypeById')
    			.setParameter('objid', objid).singleResult
    }


    @ProxyMethod
    public def lookupBldgKindBuccs(params){
    	return lupSvc.lookup( 'bldgrysettinglookup:lookupBldgKindBuccs', params, 'bucc.objid' )
    }


    @ProxyMethod
    public def lookupBldgKindBuccByPrevId(previd){
        return em.sqlContext.createNamedQuery('bldgrysettinglookup:lookupBldgKindBuccByPrevId')
                .setParameter('previd', previd).singleResult
    }


    @ProxyMethod
    public def lookupBldgKindBuccById(objid){
    	return em.sqlContext.createNamedQuery('bldgrysettinglookup:lookupBldgKindBuccById')
    			.setParameter('objid', objid).singleResult
    }


    @ProxyMethod
    public def getDepreciations(bldgtypeid){
        return em.sqlContext.createNamedQuery('bldgrysettinglookup:getDepreciations')
                .setParameter('bldgtypeid', bldgtypeid).resultList
    }


    @ProxyMethod
    public def lookupBldgAssessLevelById( objid ) {
        return em.sqlContext.createNamedQuery('bldgrysettinglookup:lookupBldgAssessLevelById')
                .setParameter('objid', objid)
                .singleResult
    }

    @ProxyMethod
    public def lookupBldgAssessLevel( params ) {
        return em.sqlContext.createNamedQuery('bldgrysettinglookup:lookupBldgAssessLevel')
                .setParameter('bldgrysettingid', params.bldgrysettingid)
                .setParameter('classificationid', params.classificationid)
                .singleResult
    }

    @ProxyMethod
    public def lookupAssessLevelFromRange( bldgassesslevelid, mv ) {
        return em.sqlContext.createNamedQuery('bldgrysettinglookup:lookupAssessLevelFromRange')
                .setParameter('bldgassesslevelid', bldgassesslevelid)
                .setParameter('mv', mv)
                .singleResult    
    }


    @ProxyMethod
    public def lookupAdditionalItems( params ) {
        if (!params.searchtext) params.searchtext = ''
        params.searchtext += '%'
        return em.sqlContext.createNamedQuery('bldgrysettinglookup:lookupAdditionalItems')
                .setParameters(params)
                .resultList
    }


    @ProxyMethod
    public def lookupAdditionalItemByPrevId(previd){
        return em.sqlContext.createNamedQuery('bldgrysettinglookup:lookupAdditionalItemByPrevId')
                .setParameter('previd', previd).singleResult
    }

    @ProxyMethod
    public def getVariables() {
        return paramSvc.getRPTParameters([:])    
    }


}
