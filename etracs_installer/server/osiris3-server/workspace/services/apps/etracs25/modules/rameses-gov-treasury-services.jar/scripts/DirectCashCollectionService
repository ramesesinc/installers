import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

public class DirectCashCollectionService extends ActiveCrudService 
{
	
	@ActiveDB("directcash_collection")
	def em

	def SCHEMA_NAME = 'directcash_collection'
	def SCHEMA_ITEM = 'item'

	@Service("DateService")
	def dtSvc 

	@ProxyMethod
	public void afterCreate( entity ) {
		entity.items.each{
			it.parentid = entity.objid 
			em.create(it, SCHEMA_ITEM)
		}	
	}

	@ProxyMethod
	public void afterUpdate( entity ) {
		entity.items.each{
			it.parentid = entity.objid 
			em.save(it, SCHEMA_ITEM)
		}	
	}

	@ProxyMethod
	public void afterOpen( entity ) {
		println 'pass'
		entity.items = em.getItems(entity)
		println entity.items 
	}

	@ProxyMethod
	public void beforeRemoveEntity( entity ) {
		entity.items.each{
			em.delete(it, SCHEMA_ITEM)
		}	
	}

	@ProxyMethod
	public void removeItem( item ) {
		em.delete(item, SCHEMA_ITEM)
	}

	@ProxyMethod
	public void doApprove( entity ) {
		if (entity.amount <= 0.0)
			throw new Exception('Amount must be greater than zero.')
		if (entity.amount != entity.items.amount.sum() )
			throw new Exception('Amount must be equal to items total amount.')
		super.approve(entity)
	}


	@ProxyMethod
	public def generateReport(params) {
		buildDateFilter( params )

		params.acctid = '%'
		if (params.account){
			params.acctid = params.account.objid
		}
		def list =  em.getReportData(params)
		if(! list) throw new Exception("No record(s) found           ")

		return list;
	}

	void buildDateFilter(params){
		if (params.qtr != null && params.month != null) {
			params.fromdate = params.year + '-' + params.month.index + '-01 00:00:00'
			params.todate   = dtSvc.format('yyyy-MM-dd', dtSvc.getMonthEndDate(dtSvc.parse('yyyy-MM-dd', params.fromdate))) + " 23:59:59"
		}
		else {
			params.fromdate = dtSvc.format('yyyy-MM-dd', dtSvc.getBeginningQtrDate( params.qtr, params.year, 1 ) ) + " 00:00:00"
			params.todate   = dtSvc.format('yyyy-MM-dd', dtSvc.getQtrEndDate( params.qtr, params.year )) + " 23:59:59"
		}
	}


}