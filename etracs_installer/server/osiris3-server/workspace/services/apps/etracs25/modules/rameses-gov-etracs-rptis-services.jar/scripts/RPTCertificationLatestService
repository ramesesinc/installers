import com.rameses.annotations.*
import com.rameses.eserver.*;
import com.rameses.common.*;

class RPTCertificationLatestService 
{
    @PersistenceContext('main')
    def em;

    @Service('RPTCertificationService')
    def certSvc 

    @Service('RPTUtil')
    def util

    @Service('FAASService')
    def faasSvc

	
	@ProxyMethod
	public def createLatestAndExisting( cert ) {
		certSvc.validateFaas(cert)
		certSvc.createCertification(cert)
		cert.putAll(certSvc.getFaasInfo(cert.faasid))
		return cert 
	}

	@ProxyMethod
	public def openCertification(objid) {
		def cert = certSvc.openCertification(objid)
		if (! cert ) 
			throw new Exception('Certification does not exist or has already been deleted.')
		cert.putAll(certSvc.getFaasInfo(cert.faasid))
		return cert 
	}


	

}
