import com.rameses.annotations.*
import com.rameses.eserver.*;
import com.rameses.common.*;

class CertificationMultipleService 
{
    @PersistenceContext('main')
    def em;

    @Service('RPTCertificationService')
    def certSvc 

	
	@ProxyMethod
	public def createCertification( cert ) {
		certSvc.createCertification(cert)
		cert.items = createMultipleItems(cert)
		return cert 
	}

	@ProxyMethod
	public def openCertification(objid) {
		def cert = certSvc.openCertification(objid)
		if (! cert ) 
			throw new Exception('Certification does not exist or has already been deleted.')
		cert.items = getMultipleItems(cert)
		return cert 
	}



	def createMultipleItems(cert){
		em.sqlContext.createNamedExecutor('rptcertification:insertMultipleItems')
			.setParameter('rptcertificationid', cert.objid)
			.setParameter('taxpayerid', cert.taxpayer.objid)
			.execute()

		def items = getMultipleItems(cert)
		if (!items) 
			throw new Exception('There are no land properties registered for this taxpayer.')
		return items 
	}

	def getMultipleItems(cert){
		return em.sqlContext.createNamedQuery('rptcertification:getMultipleItems')
							.setParameter('rptcertificationid', cert.objid)
							.resultList
	}
}
