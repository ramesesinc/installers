import com.rameses.annotations.*;
import java.rmi.server.*;
import com.rameses.rules.common.*;
import com.rameses.util.*;
import com.rameses.services.extended.*;


public class RPTBillingReportService
{
	@ActiveDB('rptbilling_report')
	def em 

	@Service('RPTUtil')
	def util

	@ProxyMethod
	public def generateReportByLedgerId( rptledgerid ) {
		def ledger = em.findLedgerbyId([rptledgerid:rptledgerid])
		if (!ledger) 
			throw new Exception('Ledger does not exist or has already been deleted.')
		
		ledger.items = em.getBillingItems([rptledgerid:rptledgerid])
		if (!ledger.items) 
			throw new Exception('Realty Tax Ledger for TD No. ' + ledger.tdno + ' has been fully paid.')

		ledger.items.each{
			it.total = it.basicnet + it.sefnet + it.firecode 
		}
		summarizeLedgerInfo(ledger)
		return ledger 
	}

	void summarizeLedgerInfo(ledger){
		ledger.basic		= util.sum(ledger.items, 'basic')
		ledger.basicdp		= util.sum(ledger.items, 'basicdp')
		ledger.basicnet		= util.sum(ledger.items, 'basicnet')
		ledger.sef			= util.sum(ledger.items, 'sef')
		ledger.sefdp		= util.sum(ledger.items, 'sefdp')
		ledger.sefnet		= util.sum(ledger.items, 'sefnet')
		ledger.firecode		= util.sum(ledger.items, 'firecode')
		ledger.total		= util.sum(ledger.items, 'total')
	}

}	
